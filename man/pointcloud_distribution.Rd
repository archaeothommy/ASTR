% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pointcloud_distribution.R
\name{pointcloud_distribution}
\alias{pointcloud_distribution}
\title{Comparing Isotope Samples to Reference Data in 3D Space}
\usage{
pointcloud_distribution(wod, samples = "samples", ref, groupby = "groups")
}
\arguments{
\item{wod}{Working data, with 206Pb/204Pb, 207Pb/204Pb, 208Pb/204Pb}

\item{samples}{Heading of a column with Samples names from working data. Default "samples".}

\item{ref}{Reference data with 206Pb/204Pb, 207Pb/204Pb, 208Pb/204Pb}

\item{groupby}{Heading of a column with reference group names from reference data. Default "group".}
}
\value{
A \code{list} of three elements:

\item{hull_inclusion}{\code{logical}. A Boolean value indicating the \strong{inclusion}
of the working data (sample points) within the convex \strong{hull} of the reference data.}
\item{centroids}{\code{data.frame}. The coordinates (locations) of the \strong{centroids} #' (mean values) for each defined reference group.}
\item{distances}{\code{matrix}. A distance \strong{matrix} where rows represent the working data samples
and columns represent the reference \strong{centroids}, containing the distance of each sample from each centroid.}
}
\description{
This package compares isotope samples to reference data in 3D space to identify isotopic consistency and the possibility of mixing between sources.
}
\examples{
# Creaete Synthetic Data
iso <- c("206Pb/204Pb","207Pb/204Pb","208Pb/204Pb")
## Create Synthetic Reference data
groups <- LETTERS[1:4]
rand_iso <- \(){c(runif(1, 18.3, 19), runif(1, 15.5, 15.9), runif(1, 37.5, 39))}
list_df <- lapply(groups, \(x){
  ls <- sapply(rand_iso(),  \(g){stats::rnorm(20, g, stats::runif(1, 0.05, 0.1))})
  colnames(ls) <- iso
  ls <- as.data.frame(ls)
  ls$groups <- x
  ls
})
ref <- as.data.frame(do.call(rbind, list_df))
## Create working data
wod <- as.data.frame(sapply(rand_iso(),  \(g){rnorm(20, g, 0.1)}))
colnames(wod) <- iso
wod$samples <- letters[1:20]
rm(list_df, iso, groups, rand_iso)
# Run Pointcloud_distribution
pointcloud_distribution(ref, "sample", ref, "groups")
}
